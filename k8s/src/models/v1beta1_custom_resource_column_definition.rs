/* 
 * Kubernetes
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.12.3
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/// V1beta1CustomResourceColumnDefinition : CustomResourceColumnDefinition specifies a column for server side printing.

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct V1beta1CustomResourceColumnDefinition {
  /// JSONPath is a simple JSON path, i.e. with array notation.
  #[serde(rename = "JSONPath")]
  json_path: String,
  /// description is a human readable description of this column.
  #[serde(rename = "description")]
  description: Option<String>,
  /// format is an optional OpenAPI type definition for this column. The 'name' format is applied to the primary identifier column to assist in clients identifying column is the resource name. See https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types for more.
  #[serde(rename = "format")]
  format: Option<String>,
  /// name is a human readable name for the column.
  #[serde(rename = "name")]
  name: String,
  /// priority is an integer defining the relative importance of this column compared to others. Lower numbers are considered higher priority. Columns that may be omitted in limited space scenarios should be given a higher priority.
  #[serde(rename = "priority")]
  priority: Option<i32>,
  /// type is an OpenAPI type definition for this column. See https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types for more.
  #[serde(rename = "type")]
  _type: String
}

impl V1beta1CustomResourceColumnDefinition {
  /// CustomResourceColumnDefinition specifies a column for server side printing.
  pub fn new(json_path: String, name: String, _type: String) -> V1beta1CustomResourceColumnDefinition {
    V1beta1CustomResourceColumnDefinition {
      json_path: json_path,
      description: None,
      format: None,
      name: name,
      priority: None,
      _type: _type
    }
  }

  pub fn set_json_path(&mut self, json_path: String) {
    self.json_path = json_path;
  }

  pub fn with_json_path(mut self, json_path: String) -> V1beta1CustomResourceColumnDefinition {
    self.json_path = json_path;
    self
  }

  pub fn json_path(&self) -> &String {
    &self.json_path
  }


  pub fn set_description(&mut self, description: String) {
    self.description = Some(description);
  }

  pub fn with_description(mut self, description: String) -> V1beta1CustomResourceColumnDefinition {
    self.description = Some(description);
    self
  }

  pub fn description(&self) -> Option<&String> {
    self.description.as_ref()
  }

  pub fn reset_description(&mut self) {
    self.description = None;
  }

  pub fn set_format(&mut self, format: String) {
    self.format = Some(format);
  }

  pub fn with_format(mut self, format: String) -> V1beta1CustomResourceColumnDefinition {
    self.format = Some(format);
    self
  }

  pub fn format(&self) -> Option<&String> {
    self.format.as_ref()
  }

  pub fn reset_format(&mut self) {
    self.format = None;
  }

  pub fn set_name(&mut self, name: String) {
    self.name = name;
  }

  pub fn with_name(mut self, name: String) -> V1beta1CustomResourceColumnDefinition {
    self.name = name;
    self
  }

  pub fn name(&self) -> &String {
    &self.name
  }


  pub fn set_priority(&mut self, priority: i32) {
    self.priority = Some(priority);
  }

  pub fn with_priority(mut self, priority: i32) -> V1beta1CustomResourceColumnDefinition {
    self.priority = Some(priority);
    self
  }

  pub fn priority(&self) -> Option<&i32> {
    self.priority.as_ref()
  }

  pub fn reset_priority(&mut self) {
    self.priority = None;
  }

  pub fn set__type(&mut self, _type: String) {
    self._type = _type;
  }

  pub fn with__type(mut self, _type: String) -> V1beta1CustomResourceColumnDefinition {
    self._type = _type;
    self
  }

  pub fn _type(&self) -> &String {
    &self._type
  }


}



