/* 
 * Kubernetes
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.12.3
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/// V2beta2ExternalMetricSource : ExternalMetricSource indicates how to scale on a metric not associated with any Kubernetes object (for example length of queue in cloud messaging service, or QPS from loadbalancer running outside of cluster).

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct V2beta2ExternalMetricSource {
  /// metric identifies the target metric by name and selector
  #[serde(rename = "metric")]
  metric: ::models::V2beta2MetricIdentifier,
  /// target specifies the target value for the given metric
  #[serde(rename = "target")]
  target: ::models::V2beta2MetricTarget
}

impl V2beta2ExternalMetricSource {
  /// ExternalMetricSource indicates how to scale on a metric not associated with any Kubernetes object (for example length of queue in cloud messaging service, or QPS from loadbalancer running outside of cluster).
  pub fn new(metric: ::models::V2beta2MetricIdentifier, target: ::models::V2beta2MetricTarget) -> V2beta2ExternalMetricSource {
    V2beta2ExternalMetricSource {
      metric: metric,
      target: target
    }
  }

  pub fn set_metric(&mut self, metric: ::models::V2beta2MetricIdentifier) {
    self.metric = metric;
  }

  pub fn with_metric(mut self, metric: ::models::V2beta2MetricIdentifier) -> V2beta2ExternalMetricSource {
    self.metric = metric;
    self
  }

  pub fn metric(&self) -> &::models::V2beta2MetricIdentifier {
    &self.metric
  }


  pub fn set_target(&mut self, target: ::models::V2beta2MetricTarget) {
    self.target = target;
  }

  pub fn with_target(mut self, target: ::models::V2beta2MetricTarget) -> V2beta2ExternalMetricSource {
    self.target = target;
    self
  }

  pub fn target(&self) -> &::models::V2beta2MetricTarget {
    &self.target
  }


}



