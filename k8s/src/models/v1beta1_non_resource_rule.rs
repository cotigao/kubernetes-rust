/* 
 * Kubernetes
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.12.3
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/// V1beta1NonResourceRule : NonResourceRule holds information that describes a rule for the non-resource

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct V1beta1NonResourceRule {
  /// NonResourceURLs is a set of partial urls that a user should have access to.  *s are allowed, but only as the full, final step in the path.  \"*\" means all.
  #[serde(rename = "nonResourceURLs")]
  non_resource_ur_ls: Option<Vec<String>>,
  /// Verb is a list of kubernetes non-resource API verbs, like: get, post, put, delete, patch, head, options.  \"*\" means all.
  #[serde(rename = "verbs")]
  verbs: Vec<String>
}

impl V1beta1NonResourceRule {
  /// NonResourceRule holds information that describes a rule for the non-resource
  pub fn new(verbs: Vec<String>) -> V1beta1NonResourceRule {
    V1beta1NonResourceRule {
      non_resource_ur_ls: None,
      verbs: verbs
    }
  }

  pub fn set_non_resource_ur_ls(&mut self, non_resource_ur_ls: Vec<String>) {
    self.non_resource_ur_ls = Some(non_resource_ur_ls);
  }

  pub fn with_non_resource_ur_ls(mut self, non_resource_ur_ls: Vec<String>) -> V1beta1NonResourceRule {
    self.non_resource_ur_ls = Some(non_resource_ur_ls);
    self
  }

  pub fn non_resource_ur_ls(&self) -> Option<&Vec<String>> {
    self.non_resource_ur_ls.as_ref()
  }

  pub fn reset_non_resource_ur_ls(&mut self) {
    self.non_resource_ur_ls = None;
  }

  pub fn set_verbs(&mut self, verbs: Vec<String>) {
    self.verbs = verbs;
  }

  pub fn with_verbs(mut self, verbs: Vec<String>) -> V1beta1NonResourceRule {
    self.verbs = verbs;
    self
  }

  pub fn verbs(&self) -> &Vec<String> {
    &self.verbs
  }


}



