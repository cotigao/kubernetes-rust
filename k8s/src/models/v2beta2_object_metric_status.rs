/* 
 * Kubernetes
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.12.3
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/// V2beta2ObjectMetricStatus : ObjectMetricStatus indicates the current value of a metric describing a kubernetes object (for example, hits-per-second on an Ingress object).

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct V2beta2ObjectMetricStatus {
  /// current contains the current value for the given metric
  #[serde(rename = "current")]
  current: ::models::V2beta2MetricValueStatus,
  #[serde(rename = "describedObject")]
  described_object: ::models::V2beta2CrossVersionObjectReference,
  /// metric identifies the target metric by name and selector
  #[serde(rename = "metric")]
  metric: ::models::V2beta2MetricIdentifier
}

impl V2beta2ObjectMetricStatus {
  /// ObjectMetricStatus indicates the current value of a metric describing a kubernetes object (for example, hits-per-second on an Ingress object).
  pub fn new(current: ::models::V2beta2MetricValueStatus, described_object: ::models::V2beta2CrossVersionObjectReference, metric: ::models::V2beta2MetricIdentifier) -> V2beta2ObjectMetricStatus {
    V2beta2ObjectMetricStatus {
      current: current,
      described_object: described_object,
      metric: metric
    }
  }

  pub fn set_current(&mut self, current: ::models::V2beta2MetricValueStatus) {
    self.current = current;
  }

  pub fn with_current(mut self, current: ::models::V2beta2MetricValueStatus) -> V2beta2ObjectMetricStatus {
    self.current = current;
    self
  }

  pub fn current(&self) -> &::models::V2beta2MetricValueStatus {
    &self.current
  }


  pub fn set_described_object(&mut self, described_object: ::models::V2beta2CrossVersionObjectReference) {
    self.described_object = described_object;
  }

  pub fn with_described_object(mut self, described_object: ::models::V2beta2CrossVersionObjectReference) -> V2beta2ObjectMetricStatus {
    self.described_object = described_object;
    self
  }

  pub fn described_object(&self) -> &::models::V2beta2CrossVersionObjectReference {
    &self.described_object
  }


  pub fn set_metric(&mut self, metric: ::models::V2beta2MetricIdentifier) {
    self.metric = metric;
  }

  pub fn with_metric(mut self, metric: ::models::V2beta2MetricIdentifier) -> V2beta2ObjectMetricStatus {
    self.metric = metric;
    self
  }

  pub fn metric(&self) -> &::models::V2beta2MetricIdentifier {
    &self.metric
  }


}



