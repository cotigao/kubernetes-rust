/* 
 * Kubernetes
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.12.3
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct V1beta1CustomResourceDefinitionVersion {
  /// Name is the version name, e.g. “v1”, “v2beta1”, etc.
  #[serde(rename = "name")]
  name: String,
  /// Served is a flag enabling/disabling this version from being served via REST APIs
  #[serde(rename = "served")]
  served: bool,
  /// Storage flags the version as storage version. There must be exactly one flagged as storage version.
  #[serde(rename = "storage")]
  storage: bool
}

impl V1beta1CustomResourceDefinitionVersion {
  pub fn new(name: String, served: bool, storage: bool) -> V1beta1CustomResourceDefinitionVersion {
    V1beta1CustomResourceDefinitionVersion {
      name: name,
      served: served,
      storage: storage
    }
  }

  pub fn set_name(&mut self, name: String) {
    self.name = name;
  }

  pub fn with_name(mut self, name: String) -> V1beta1CustomResourceDefinitionVersion {
    self.name = name;
    self
  }

  pub fn name(&self) -> &String {
    &self.name
  }


  pub fn set_served(&mut self, served: bool) {
    self.served = served;
  }

  pub fn with_served(mut self, served: bool) -> V1beta1CustomResourceDefinitionVersion {
    self.served = served;
    self
  }

  pub fn served(&self) -> &bool {
    &self.served
  }


  pub fn set_storage(&mut self, storage: bool) {
    self.storage = storage;
  }

  pub fn with_storage(mut self, storage: bool) -> V1beta1CustomResourceDefinitionVersion {
    self.storage = storage;
    self
  }

  pub fn storage(&self) -> &bool {
    &self.storage
  }


}



