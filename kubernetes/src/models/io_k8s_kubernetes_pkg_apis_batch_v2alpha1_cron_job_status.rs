/* 
 * Kubernetes
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.7.12
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/// IoK8sKubernetesPkgApisBatchV2alpha1CronJobStatus : CronJobStatus represents the current state of a cron job.

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct IoK8sKubernetesPkgApisBatchV2alpha1CronJobStatus {
  /// A list of pointers to currently running jobs.
  #[serde(rename = "active")]
  active: Option<Vec<::models::IoK8sKubernetesPkgApiV1ObjectReference>>,
  /// Information when was the last time the job was successfully scheduled.
  #[serde(rename = "lastScheduleTime")]
  last_schedule_time: Option<::models::IoK8sApimachineryPkgApisMetaV1Time>
}

impl IoK8sKubernetesPkgApisBatchV2alpha1CronJobStatus {
  /// CronJobStatus represents the current state of a cron job.
  pub fn new() -> IoK8sKubernetesPkgApisBatchV2alpha1CronJobStatus {
    IoK8sKubernetesPkgApisBatchV2alpha1CronJobStatus {
      active: None,
      last_schedule_time: None
    }
  }

  pub fn set_active(&mut self, active: Vec<::models::IoK8sKubernetesPkgApiV1ObjectReference>) {
    self.active = Some(active);
  }

  pub fn with_active(mut self, active: Vec<::models::IoK8sKubernetesPkgApiV1ObjectReference>) -> IoK8sKubernetesPkgApisBatchV2alpha1CronJobStatus {
    self.active = Some(active);
    self
  }

  pub fn active(&self) -> Option<&Vec<::models::IoK8sKubernetesPkgApiV1ObjectReference>> {
    self.active.as_ref()
  }

  pub fn reset_active(&mut self) {
    self.active = None;
  }

  pub fn set_last_schedule_time(&mut self, last_schedule_time: ::models::IoK8sApimachineryPkgApisMetaV1Time) {
    self.last_schedule_time = Some(last_schedule_time);
  }

  pub fn with_last_schedule_time(mut self, last_schedule_time: ::models::IoK8sApimachineryPkgApisMetaV1Time) -> IoK8sKubernetesPkgApisBatchV2alpha1CronJobStatus {
    self.last_schedule_time = Some(last_schedule_time);
    self
  }

  pub fn last_schedule_time(&self) -> Option<&::models::IoK8sApimachineryPkgApisMetaV1Time> {
    self.last_schedule_time.as_ref()
  }

  pub fn reset_last_schedule_time(&mut self) {
    self.last_schedule_time = None;
  }

}



