/* 
 * Kubernetes
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.7.12
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/// IoK8sKubernetesPkgApiV1NodeDaemonEndpoints : NodeDaemonEndpoints lists ports opened by daemons running on the Node.

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct IoK8sKubernetesPkgApiV1NodeDaemonEndpoints {
  /// Endpoint on which Kubelet is listening.
  #[serde(rename = "kubeletEndpoint")]
  kubelet_endpoint: Option<::models::IoK8sKubernetesPkgApiV1DaemonEndpoint>
}

impl IoK8sKubernetesPkgApiV1NodeDaemonEndpoints {
  /// NodeDaemonEndpoints lists ports opened by daemons running on the Node.
  pub fn new() -> IoK8sKubernetesPkgApiV1NodeDaemonEndpoints {
    IoK8sKubernetesPkgApiV1NodeDaemonEndpoints {
      kubelet_endpoint: None
    }
  }

  pub fn set_kubelet_endpoint(&mut self, kubelet_endpoint: ::models::IoK8sKubernetesPkgApiV1DaemonEndpoint) {
    self.kubelet_endpoint = Some(kubelet_endpoint);
  }

  pub fn with_kubelet_endpoint(mut self, kubelet_endpoint: ::models::IoK8sKubernetesPkgApiV1DaemonEndpoint) -> IoK8sKubernetesPkgApiV1NodeDaemonEndpoints {
    self.kubelet_endpoint = Some(kubelet_endpoint);
    self
  }

  pub fn kubelet_endpoint(&self) -> Option<&::models::IoK8sKubernetesPkgApiV1DaemonEndpoint> {
    self.kubelet_endpoint.as_ref()
  }

  pub fn reset_kubelet_endpoint(&mut self) {
    self.kubelet_endpoint = None;
  }

}



