/* 
 * Kubernetes
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: v1.7.12
 * 
 * Generated by: https://openapi-generator.tech
 */

/// IoK8sKubernetesPkgApisAdmissionregistrationV1alpha1AdmissionHookClientConfig : AdmissionHookClientConfig contains the information to make a TLS connection with the webhook

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct IoK8sKubernetesPkgApisAdmissionregistrationV1alpha1AdmissionHookClientConfig {
  /// CABundle is a PEM encoded CA bundle which will be used to validate webhook's server certificate. Required
  #[serde(rename = "caBundle")]
  ca_bundle: String,
  #[serde(rename = "service")]
  service: ::models::IoK8sKubernetesPkgApisAdmissionregistrationV1alpha1ServiceReference
}

impl IoK8sKubernetesPkgApisAdmissionregistrationV1alpha1AdmissionHookClientConfig {
  /// AdmissionHookClientConfig contains the information to make a TLS connection with the webhook
  pub fn new(ca_bundle: String, service: ::models::IoK8sKubernetesPkgApisAdmissionregistrationV1alpha1ServiceReference) -> IoK8sKubernetesPkgApisAdmissionregistrationV1alpha1AdmissionHookClientConfig {
    IoK8sKubernetesPkgApisAdmissionregistrationV1alpha1AdmissionHookClientConfig {
      ca_bundle: ca_bundle,
      service: service
    }
  }

  pub fn set_ca_bundle(&mut self, ca_bundle: String) {
    self.ca_bundle = ca_bundle;
  }

  pub fn with_ca_bundle(mut self, ca_bundle: String) -> IoK8sKubernetesPkgApisAdmissionregistrationV1alpha1AdmissionHookClientConfig {
    self.ca_bundle = ca_bundle;
    self
  }

  pub fn ca_bundle(&self) -> &String {
    &self.ca_bundle
  }


  pub fn set_service(&mut self, service: ::models::IoK8sKubernetesPkgApisAdmissionregistrationV1alpha1ServiceReference) {
    self.service = service;
  }

  pub fn with_service(mut self, service: ::models::IoK8sKubernetesPkgApisAdmissionregistrationV1alpha1ServiceReference) -> IoK8sKubernetesPkgApisAdmissionregistrationV1alpha1AdmissionHookClientConfig {
    self.service = service;
    self
  }

  pub fn service(&self) -> &::models::IoK8sKubernetesPkgApisAdmissionregistrationV1alpha1ServiceReference {
    &self.service
  }


}



