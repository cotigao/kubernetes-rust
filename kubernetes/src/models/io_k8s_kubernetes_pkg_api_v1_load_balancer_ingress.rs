/* 
 * Kubernetes
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: v1.7.12
 * 
 * Generated by: https://openapi-generator.tech
 */

/// IoK8sKubernetesPkgApiV1LoadBalancerIngress : LoadBalancerIngress represents the status of a load-balancer ingress point: traffic intended for the service should be sent to an ingress point.

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct IoK8sKubernetesPkgApiV1LoadBalancerIngress {
  /// Hostname is set for load-balancer ingress points that are DNS based (typically AWS load-balancers)
  #[serde(rename = "hostname")]
  hostname: Option<String>,
  /// IP is set for load-balancer ingress points that are IP based (typically GCE or OpenStack load-balancers)
  #[serde(rename = "ip")]
  ip: Option<String>
}

impl IoK8sKubernetesPkgApiV1LoadBalancerIngress {
  /// LoadBalancerIngress represents the status of a load-balancer ingress point: traffic intended for the service should be sent to an ingress point.
  pub fn new() -> IoK8sKubernetesPkgApiV1LoadBalancerIngress {
    IoK8sKubernetesPkgApiV1LoadBalancerIngress {
      hostname: None,
      ip: None
    }
  }

  pub fn set_hostname(&mut self, hostname: String) {
    self.hostname = Some(hostname);
  }

  pub fn with_hostname(mut self, hostname: String) -> IoK8sKubernetesPkgApiV1LoadBalancerIngress {
    self.hostname = Some(hostname);
    self
  }

  pub fn hostname(&self) -> Option<&String> {
    self.hostname.as_ref()
  }

  pub fn reset_hostname(&mut self) {
    self.hostname = None;
  }

  pub fn set_ip(&mut self, ip: String) {
    self.ip = Some(ip);
  }

  pub fn with_ip(mut self, ip: String) -> IoK8sKubernetesPkgApiV1LoadBalancerIngress {
    self.ip = Some(ip);
    self
  }

  pub fn ip(&self) -> Option<&String> {
    self.ip.as_ref()
  }

  pub fn reset_ip(&mut self) {
    self.ip = None;
  }

}



