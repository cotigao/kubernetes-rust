/* 
 * Kubernetes
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: v1.7.12
 * 
 * Generated by: https://openapi-generator.tech
 */

/// IoK8sKubernetesPkgApiV1NodeAddress : NodeAddress contains information for the node's address.

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct IoK8sKubernetesPkgApiV1NodeAddress {
  /// The node address.
  #[serde(rename = "address")]
  address: String,
  /// Node address type, one of Hostname, ExternalIP or InternalIP.
  #[serde(rename = "type")]
  _type: String
}

impl IoK8sKubernetesPkgApiV1NodeAddress {
  /// NodeAddress contains information for the node's address.
  pub fn new(address: String, _type: String) -> IoK8sKubernetesPkgApiV1NodeAddress {
    IoK8sKubernetesPkgApiV1NodeAddress {
      address: address,
      _type: _type
    }
  }

  pub fn set_address(&mut self, address: String) {
    self.address = address;
  }

  pub fn with_address(mut self, address: String) -> IoK8sKubernetesPkgApiV1NodeAddress {
    self.address = address;
    self
  }

  pub fn address(&self) -> &String {
    &self.address
  }


  pub fn set__type(&mut self, _type: String) {
    self._type = _type;
  }

  pub fn with__type(mut self, _type: String) -> IoK8sKubernetesPkgApiV1NodeAddress {
    self._type = _type;
    self
  }

  pub fn _type(&self) -> &String {
    &self._type
  }


}



