/* 
 * Kubernetes
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.7.17
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/// V1ListMeta : ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct V1ListMeta {
  /// String that identifies the server's internal version of this object that can be used by clients to determine when objects have changed. ::serde_json::Value must be treated as opaque by clients and passed unmodified back to the server. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency
  #[serde(rename = "resourceVersion")]
  resource_version: Option<String>,
  /// SelfLink is a URL representing this object. Populated by the system. Read-only.
  #[serde(rename = "selfLink")]
  self_link: Option<String>
}

impl V1ListMeta {
  /// ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.
  pub fn new() -> V1ListMeta {
    V1ListMeta {
      resource_version: None,
      self_link: None
    }
  }

  pub fn set_resource_version(&mut self, resource_version: String) {
    self.resource_version = Some(resource_version);
  }

  pub fn with_resource_version(mut self, resource_version: String) -> V1ListMeta {
    self.resource_version = Some(resource_version);
    self
  }

  pub fn resource_version(&self) -> Option<&String> {
    self.resource_version.as_ref()
  }

  pub fn reset_resource_version(&mut self) {
    self.resource_version = None;
  }

  pub fn set_self_link(&mut self, self_link: String) {
    self.self_link = Some(self_link);
  }

  pub fn with_self_link(mut self, self_link: String) -> V1ListMeta {
    self.self_link = Some(self_link);
    self
  }

  pub fn self_link(&self) -> Option<&String> {
    self.self_link.as_ref()
  }

  pub fn reset_self_link(&mut self) {
    self.self_link = None;
  }

}



