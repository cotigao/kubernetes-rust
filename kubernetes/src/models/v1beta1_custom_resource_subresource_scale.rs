/* 
 * Kubernetes
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.12.3
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/// V1beta1CustomResourceSubresourceScale : CustomResourceSubresourceScale defines how to serve the scale subresource for CustomResources.

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct V1beta1CustomResourceSubresourceScale {
  /// LabelSelectorPath defines the JSON path inside of a CustomResource that corresponds to Scale.Status.Selector. Only JSON paths without the array notation are allowed. Must be a JSON Path under .status. Must be set to work with HPA. If there is no value under the given path in the CustomResource, the status label selector value in the /scale subresource will default to the empty string.
  #[serde(rename = "labelSelectorPath")]
  label_selector_path: Option<String>,
  /// SpecReplicasPath defines the JSON path inside of a CustomResource that corresponds to Scale.Spec.Replicas. Only JSON paths without the array notation are allowed. Must be a JSON Path under .spec. If there is no value under the given path in the CustomResource, the /scale subresource will return an error on GET.
  #[serde(rename = "specReplicasPath")]
  spec_replicas_path: String,
  /// StatusReplicasPath defines the JSON path inside of a CustomResource that corresponds to Scale.Status.Replicas. Only JSON paths without the array notation are allowed. Must be a JSON Path under .status. If there is no value under the given path in the CustomResource, the status replica value in the /scale subresource will default to 0.
  #[serde(rename = "statusReplicasPath")]
  status_replicas_path: String
}

impl V1beta1CustomResourceSubresourceScale {
  /// CustomResourceSubresourceScale defines how to serve the scale subresource for CustomResources.
  pub fn new(spec_replicas_path: String, status_replicas_path: String) -> V1beta1CustomResourceSubresourceScale {
    V1beta1CustomResourceSubresourceScale {
      label_selector_path: None,
      spec_replicas_path: spec_replicas_path,
      status_replicas_path: status_replicas_path
    }
  }

  pub fn set_label_selector_path(&mut self, label_selector_path: String) {
    self.label_selector_path = Some(label_selector_path);
  }

  pub fn with_label_selector_path(mut self, label_selector_path: String) -> V1beta1CustomResourceSubresourceScale {
    self.label_selector_path = Some(label_selector_path);
    self
  }

  pub fn label_selector_path(&self) -> Option<&String> {
    self.label_selector_path.as_ref()
  }

  pub fn reset_label_selector_path(&mut self) {
    self.label_selector_path = None;
  }

  pub fn set_spec_replicas_path(&mut self, spec_replicas_path: String) {
    self.spec_replicas_path = spec_replicas_path;
  }

  pub fn with_spec_replicas_path(mut self, spec_replicas_path: String) -> V1beta1CustomResourceSubresourceScale {
    self.spec_replicas_path = spec_replicas_path;
    self
  }

  pub fn spec_replicas_path(&self) -> &String {
    &self.spec_replicas_path
  }


  pub fn set_status_replicas_path(&mut self, status_replicas_path: String) {
    self.status_replicas_path = status_replicas_path;
  }

  pub fn with_status_replicas_path(mut self, status_replicas_path: String) -> V1beta1CustomResourceSubresourceScale {
    self.status_replicas_path = status_replicas_path;
    self
  }

  pub fn status_replicas_path(&self) -> &String {
    &self.status_replicas_path
  }


}



