/* 
 * Kubernetes
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.12.3
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/// V1alpha1PriorityClass : PriorityClass defines mapping from a priority class name to the priority integer value. The value can be any valid integer.

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct V1alpha1PriorityClass {
  /// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
  #[serde(rename = "apiVersion")]
  api_version: Option<String>,
  /// description is an arbitrary string that usually provides guidelines on when this priority class should be used.
  #[serde(rename = "description")]
  description: Option<String>,
  /// globalDefault specifies whether this PriorityClass should be considered as the default priority for pods that do not have any priority class. Only one PriorityClass can be marked as `globalDefault`. However, if more than one PriorityClasses exists with their `globalDefault` field set to true, the smallest value of such global default PriorityClasses will be used as the default priority.
  #[serde(rename = "globalDefault")]
  global_default: Option<bool>,
  /// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
  #[serde(rename = "kind")]
  kind: Option<String>,
  /// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
  #[serde(rename = "metadata")]
  metadata: Option<::models::V1ObjectMeta>,
  /// The value of this priority class. This is the actual priority that pods receive when they have the name of this class in their pod spec.
  #[serde(rename = "value")]
  value: i32
}

impl V1alpha1PriorityClass {
  /// PriorityClass defines mapping from a priority class name to the priority integer value. The value can be any valid integer.
  pub fn new(value: i32) -> V1alpha1PriorityClass {
    V1alpha1PriorityClass {
      api_version: None,
      description: None,
      global_default: None,
      kind: None,
      metadata: None,
      value: value
    }
  }

  pub fn set_api_version(&mut self, api_version: String) {
    self.api_version = Some(api_version);
  }

  pub fn with_api_version(mut self, api_version: String) -> V1alpha1PriorityClass {
    self.api_version = Some(api_version);
    self
  }

  pub fn api_version(&self) -> Option<&String> {
    self.api_version.as_ref()
  }

  pub fn reset_api_version(&mut self) {
    self.api_version = None;
  }

  pub fn set_description(&mut self, description: String) {
    self.description = Some(description);
  }

  pub fn with_description(mut self, description: String) -> V1alpha1PriorityClass {
    self.description = Some(description);
    self
  }

  pub fn description(&self) -> Option<&String> {
    self.description.as_ref()
  }

  pub fn reset_description(&mut self) {
    self.description = None;
  }

  pub fn set_global_default(&mut self, global_default: bool) {
    self.global_default = Some(global_default);
  }

  pub fn with_global_default(mut self, global_default: bool) -> V1alpha1PriorityClass {
    self.global_default = Some(global_default);
    self
  }

  pub fn global_default(&self) -> Option<&bool> {
    self.global_default.as_ref()
  }

  pub fn reset_global_default(&mut self) {
    self.global_default = None;
  }

  pub fn set_kind(&mut self, kind: String) {
    self.kind = Some(kind);
  }

  pub fn with_kind(mut self, kind: String) -> V1alpha1PriorityClass {
    self.kind = Some(kind);
    self
  }

  pub fn kind(&self) -> Option<&String> {
    self.kind.as_ref()
  }

  pub fn reset_kind(&mut self) {
    self.kind = None;
  }

  pub fn set_metadata(&mut self, metadata: ::models::V1ObjectMeta) {
    self.metadata = Some(metadata);
  }

  pub fn with_metadata(mut self, metadata: ::models::V1ObjectMeta) -> V1alpha1PriorityClass {
    self.metadata = Some(metadata);
    self
  }

  pub fn metadata(&self) -> Option<&::models::V1ObjectMeta> {
    self.metadata.as_ref()
  }

  pub fn reset_metadata(&mut self) {
    self.metadata = None;
  }

  pub fn set_value(&mut self, value: i32) {
    self.value = value;
  }

  pub fn with_value(mut self, value: i32) -> V1alpha1PriorityClass {
    self.value = value;
    self
  }

  pub fn value(&self) -> &i32 {
    &self.value
  }


}



