/* 
 * Kubernetes
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: v1.7.12
 * 
 * Generated by: https://openapi-generator.tech
 */

/// IoK8sApimachineryPkgApisMetaV1StatusCause : StatusCause provides more information about an api.Status failure, including cases when multiple errors are encountered.

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct IoK8sApimachineryPkgApisMetaV1StatusCause {
  /// The field of the resource that has caused this error, as named by its JSON serialization. May include dot and postfix notation for nested attributes. Arrays are zero-indexed.  Fields may appear more than once in an array of causes due to fields having multiple errors. Optional.  Examples:   \"name\" - the field \"name\" on the current resource   \"items[0].name\" - the field \"name\" on the first array entry in \"items\"
  #[serde(rename = "field")]
  field: Option<String>,
  /// A human-readable description of the cause of the error.  This field may be presented as-is to a reader.
  #[serde(rename = "message")]
  message: Option<String>,
  /// A machine-readable description of the cause of the error. If this value is empty there is no information available.
  #[serde(rename = "reason")]
  reason: Option<String>
}

impl IoK8sApimachineryPkgApisMetaV1StatusCause {
  /// StatusCause provides more information about an api.Status failure, including cases when multiple errors are encountered.
  pub fn new() -> IoK8sApimachineryPkgApisMetaV1StatusCause {
    IoK8sApimachineryPkgApisMetaV1StatusCause {
      field: None,
      message: None,
      reason: None
    }
  }

  pub fn set_field(&mut self, field: String) {
    self.field = Some(field);
  }

  pub fn with_field(mut self, field: String) -> IoK8sApimachineryPkgApisMetaV1StatusCause {
    self.field = Some(field);
    self
  }

  pub fn field(&self) -> Option<&String> {
    self.field.as_ref()
  }

  pub fn reset_field(&mut self) {
    self.field = None;
  }

  pub fn set_message(&mut self, message: String) {
    self.message = Some(message);
  }

  pub fn with_message(mut self, message: String) -> IoK8sApimachineryPkgApisMetaV1StatusCause {
    self.message = Some(message);
    self
  }

  pub fn message(&self) -> Option<&String> {
    self.message.as_ref()
  }

  pub fn reset_message(&mut self) {
    self.message = None;
  }

  pub fn set_reason(&mut self, reason: String) {
    self.reason = Some(reason);
  }

  pub fn with_reason(mut self, reason: String) -> IoK8sApimachineryPkgApisMetaV1StatusCause {
    self.reason = Some(reason);
    self
  }

  pub fn reason(&self) -> Option<&String> {
    self.reason.as_ref()
  }

  pub fn reset_reason(&mut self) {
    self.reason = None;
  }

}



