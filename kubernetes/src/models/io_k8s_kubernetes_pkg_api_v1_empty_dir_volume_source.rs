/* 
 * Kubernetes
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: v1.7.12
 * 
 * Generated by: https://openapi-generator.tech
 */

/// IoK8sKubernetesPkgApiV1EmptyDirVolumeSource : Represents an empty directory for a pod. Empty directory volumes support ownership management and SELinux relabeling.

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct IoK8sKubernetesPkgApiV1EmptyDirVolumeSource {
  /// What type of storage medium should back this directory. The default is \"\" which means to use the node's default medium. Must be an empty string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
  #[serde(rename = "medium")]
  medium: Option<String>,
  #[serde(rename = "sizeLimit")]
  size_limit: Option<String>
}

impl IoK8sKubernetesPkgApiV1EmptyDirVolumeSource {
  /// Represents an empty directory for a pod. Empty directory volumes support ownership management and SELinux relabeling.
  pub fn new() -> IoK8sKubernetesPkgApiV1EmptyDirVolumeSource {
    IoK8sKubernetesPkgApiV1EmptyDirVolumeSource {
      medium: None,
      size_limit: None
    }
  }

  pub fn set_medium(&mut self, medium: String) {
    self.medium = Some(medium);
  }

  pub fn with_medium(mut self, medium: String) -> IoK8sKubernetesPkgApiV1EmptyDirVolumeSource {
    self.medium = Some(medium);
    self
  }

  pub fn medium(&self) -> Option<&String> {
    self.medium.as_ref()
  }

  pub fn reset_medium(&mut self) {
    self.medium = None;
  }

  pub fn set_size_limit(&mut self, size_limit: String) {
    self.size_limit = Some(size_limit);
  }

  pub fn with_size_limit(mut self, size_limit: String) -> IoK8sKubernetesPkgApiV1EmptyDirVolumeSource {
    self.size_limit = Some(size_limit);
    self
  }

  pub fn size_limit(&self) -> Option<&String> {
    self.size_limit.as_ref()
  }

  pub fn reset_size_limit(&mut self) {
    self.size_limit = None;
  }

}



