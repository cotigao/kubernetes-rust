/* 
 * Kubernetes
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.7.12
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/// IoK8sKubernetesPkgApiV1EmptyDirVolumeSource : Represents an empty directory for a pod. Empty directory volumes support ownership management and SELinux relabeling.

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct IoK8sKubernetesPkgApiV1EmptyDirVolumeSource {
  /// What type of storage medium should back this directory. The default is \"\" which means to use the node's default medium. Must be an empty string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
  #[serde(rename = "medium")]
  medium: Option<String>,
  /// Total amount of local storage required for this EmptyDir volume. The size limit is also applicable for memory medium. The maximum usage on memory medium EmptyDir would be the minimum value between the SizeLimit specified here and the sum of memory limits of all containers in a pod. The default is nil which means that the limit is undefined. More info: http://kubernetes.io/docs/user-guide/volumes#emptydir
  #[serde(rename = "sizeLimit")]
  size_limit: Option<::models::IoK8sApimachineryPkgApiResourceQuantity>
}

impl IoK8sKubernetesPkgApiV1EmptyDirVolumeSource {
  /// Represents an empty directory for a pod. Empty directory volumes support ownership management and SELinux relabeling.
  pub fn new() -> IoK8sKubernetesPkgApiV1EmptyDirVolumeSource {
    IoK8sKubernetesPkgApiV1EmptyDirVolumeSource {
      medium: None,
      size_limit: None
    }
  }

  pub fn set_medium(&mut self, medium: String) {
    self.medium = Some(medium);
  }

  pub fn with_medium(mut self, medium: String) -> IoK8sKubernetesPkgApiV1EmptyDirVolumeSource {
    self.medium = Some(medium);
    self
  }

  pub fn medium(&self) -> Option<&String> {
    self.medium.as_ref()
  }

  pub fn reset_medium(&mut self) {
    self.medium = None;
  }

  pub fn set_size_limit(&mut self, size_limit: ::models::IoK8sApimachineryPkgApiResourceQuantity) {
    self.size_limit = Some(size_limit);
  }

  pub fn with_size_limit(mut self, size_limit: ::models::IoK8sApimachineryPkgApiResourceQuantity) -> IoK8sKubernetesPkgApiV1EmptyDirVolumeSource {
    self.size_limit = Some(size_limit);
    self
  }

  pub fn size_limit(&self) -> Option<&::models::IoK8sApimachineryPkgApiResourceQuantity> {
    self.size_limit.as_ref()
  }

  pub fn reset_size_limit(&mut self) {
    self.size_limit = None;
  }

}



