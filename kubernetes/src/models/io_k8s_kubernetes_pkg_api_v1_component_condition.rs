/* 
 * Kubernetes
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: v1.7.12
 * 
 * Generated by: https://openapi-generator.tech
 */

/// IoK8sKubernetesPkgApiV1ComponentCondition : Information about the condition of a component.

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct IoK8sKubernetesPkgApiV1ComponentCondition {
  /// Condition error code for a component. For example, a health check error code.
  #[serde(rename = "error")]
  error: Option<String>,
  /// Message about the condition for a component. For example, information about a health check.
  #[serde(rename = "message")]
  message: Option<String>,
  /// Status of the condition for a component. Valid values for \"Healthy\": \"True\", \"False\", or \"Unknown\".
  #[serde(rename = "status")]
  status: String,
  /// Type of condition for a component. Valid value: \"Healthy\"
  #[serde(rename = "type")]
  _type: String
}

impl IoK8sKubernetesPkgApiV1ComponentCondition {
  /// Information about the condition of a component.
  pub fn new(status: String, _type: String) -> IoK8sKubernetesPkgApiV1ComponentCondition {
    IoK8sKubernetesPkgApiV1ComponentCondition {
      error: None,
      message: None,
      status: status,
      _type: _type
    }
  }

  pub fn set_error(&mut self, error: String) {
    self.error = Some(error);
  }

  pub fn with_error(mut self, error: String) -> IoK8sKubernetesPkgApiV1ComponentCondition {
    self.error = Some(error);
    self
  }

  pub fn error(&self) -> Option<&String> {
    self.error.as_ref()
  }

  pub fn reset_error(&mut self) {
    self.error = None;
  }

  pub fn set_message(&mut self, message: String) {
    self.message = Some(message);
  }

  pub fn with_message(mut self, message: String) -> IoK8sKubernetesPkgApiV1ComponentCondition {
    self.message = Some(message);
    self
  }

  pub fn message(&self) -> Option<&String> {
    self.message.as_ref()
  }

  pub fn reset_message(&mut self) {
    self.message = None;
  }

  pub fn set_status(&mut self, status: String) {
    self.status = status;
  }

  pub fn with_status(mut self, status: String) -> IoK8sKubernetesPkgApiV1ComponentCondition {
    self.status = status;
    self
  }

  pub fn status(&self) -> &String {
    &self.status
  }


  pub fn set__type(&mut self, _type: String) {
    self._type = _type;
  }

  pub fn with__type(mut self, _type: String) -> IoK8sKubernetesPkgApiV1ComponentCondition {
    self._type = _type;
    self
  }

  pub fn _type(&self) -> &String {
    &self._type
  }


}



