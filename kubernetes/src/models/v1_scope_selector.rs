/* 
 * Kubernetes
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.12.3
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/// V1ScopeSelector : A scope selector represents the AND of the selectors represented by the scoped-resource selector requirements.

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct V1ScopeSelector {
  /// A list of scope selector requirements by scope of the resources.
  #[serde(rename = "matchExpressions")]
  match_expressions: Option<Vec<::models::V1ScopedResourceSelectorRequirement>>
}

impl V1ScopeSelector {
  /// A scope selector represents the AND of the selectors represented by the scoped-resource selector requirements.
  pub fn new() -> V1ScopeSelector {
    V1ScopeSelector {
      match_expressions: None
    }
  }

  pub fn set_match_expressions(&mut self, match_expressions: Vec<::models::V1ScopedResourceSelectorRequirement>) {
    self.match_expressions = Some(match_expressions);
  }

  pub fn with_match_expressions(mut self, match_expressions: Vec<::models::V1ScopedResourceSelectorRequirement>) -> V1ScopeSelector {
    self.match_expressions = Some(match_expressions);
    self
  }

  pub fn match_expressions(&self) -> Option<&Vec<::models::V1ScopedResourceSelectorRequirement>> {
    self.match_expressions.as_ref()
  }

  pub fn reset_match_expressions(&mut self) {
    self.match_expressions = None;
  }

}



