/* 
 * Kubernetes
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: v1.7.12
 * 
 * Generated by: https://openapi-generator.tech
 */

/// IoK8sKubernetesPkgApiV1ResourceRequirements : ResourceRequirements describes the compute resource requirements.

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct IoK8sKubernetesPkgApiV1ResourceRequirements {
  /// Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
  #[serde(rename = "limits")]
  limits: Option<::std::collections::HashMap<String, String>>,
  /// Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
  #[serde(rename = "requests")]
  requests: Option<::std::collections::HashMap<String, String>>
}

impl IoK8sKubernetesPkgApiV1ResourceRequirements {
  /// ResourceRequirements describes the compute resource requirements.
  pub fn new() -> IoK8sKubernetesPkgApiV1ResourceRequirements {
    IoK8sKubernetesPkgApiV1ResourceRequirements {
      limits: None,
      requests: None
    }
  }

  pub fn set_limits(&mut self, limits: ::std::collections::HashMap<String, String>) {
    self.limits = Some(limits);
  }

  pub fn with_limits(mut self, limits: ::std::collections::HashMap<String, String>) -> IoK8sKubernetesPkgApiV1ResourceRequirements {
    self.limits = Some(limits);
    self
  }

  pub fn limits(&self) -> Option<&::std::collections::HashMap<String, String>> {
    self.limits.as_ref()
  }

  pub fn reset_limits(&mut self) {
    self.limits = None;
  }

  pub fn set_requests(&mut self, requests: ::std::collections::HashMap<String, String>) {
    self.requests = Some(requests);
  }

  pub fn with_requests(mut self, requests: ::std::collections::HashMap<String, String>) -> IoK8sKubernetesPkgApiV1ResourceRequirements {
    self.requests = Some(requests);
    self
  }

  pub fn requests(&self) -> Option<&::std::collections::HashMap<String, String>> {
    self.requests.as_ref()
  }

  pub fn reset_requests(&mut self) {
    self.requests = None;
  }

}



