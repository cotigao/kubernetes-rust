/* 
 * Kubernetes
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: v1.7.12
 * 
 * Generated by: https://openapi-generator.tech
 */

/// IoK8sKubernetesPkgApiV1AwsElasticBlockStoreVolumeSource : Represents a Persistent Disk resource in AWS.  An AWS EBS disk must exist before mounting to a container. The disk must also be in the same AWS zone as the kubelet. An AWS EBS disk can only be mounted as read/write once. AWS EBS volumes support ownership management and SELinux relabeling.

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct IoK8sKubernetesPkgApiV1AwsElasticBlockStoreVolumeSource {
  /// Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
  #[serde(rename = "fsType")]
  fs_type: Option<String>,
  /// The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as \"1\". Similarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty).
  #[serde(rename = "partition")]
  partition: Option<i32>,
  /// Specify \"true\" to force and set the ReadOnly property in VolumeMounts to \"true\". If omitted, the default is \"false\". More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
  #[serde(rename = "readOnly")]
  read_only: Option<bool>,
  /// Unique ID of the persistent disk resource in AWS (Amazon EBS volume). More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
  #[serde(rename = "volumeID")]
  volume_id: String
}

impl IoK8sKubernetesPkgApiV1AwsElasticBlockStoreVolumeSource {
  /// Represents a Persistent Disk resource in AWS.  An AWS EBS disk must exist before mounting to a container. The disk must also be in the same AWS zone as the kubelet. An AWS EBS disk can only be mounted as read/write once. AWS EBS volumes support ownership management and SELinux relabeling.
  pub fn new(volume_id: String) -> IoK8sKubernetesPkgApiV1AwsElasticBlockStoreVolumeSource {
    IoK8sKubernetesPkgApiV1AwsElasticBlockStoreVolumeSource {
      fs_type: None,
      partition: None,
      read_only: None,
      volume_id: volume_id
    }
  }

  pub fn set_fs_type(&mut self, fs_type: String) {
    self.fs_type = Some(fs_type);
  }

  pub fn with_fs_type(mut self, fs_type: String) -> IoK8sKubernetesPkgApiV1AwsElasticBlockStoreVolumeSource {
    self.fs_type = Some(fs_type);
    self
  }

  pub fn fs_type(&self) -> Option<&String> {
    self.fs_type.as_ref()
  }

  pub fn reset_fs_type(&mut self) {
    self.fs_type = None;
  }

  pub fn set_partition(&mut self, partition: i32) {
    self.partition = Some(partition);
  }

  pub fn with_partition(mut self, partition: i32) -> IoK8sKubernetesPkgApiV1AwsElasticBlockStoreVolumeSource {
    self.partition = Some(partition);
    self
  }

  pub fn partition(&self) -> Option<&i32> {
    self.partition.as_ref()
  }

  pub fn reset_partition(&mut self) {
    self.partition = None;
  }

  pub fn set_read_only(&mut self, read_only: bool) {
    self.read_only = Some(read_only);
  }

  pub fn with_read_only(mut self, read_only: bool) -> IoK8sKubernetesPkgApiV1AwsElasticBlockStoreVolumeSource {
    self.read_only = Some(read_only);
    self
  }

  pub fn read_only(&self) -> Option<&bool> {
    self.read_only.as_ref()
  }

  pub fn reset_read_only(&mut self) {
    self.read_only = None;
  }

  pub fn set_volume_id(&mut self, volume_id: String) {
    self.volume_id = volume_id;
  }

  pub fn with_volume_id(mut self, volume_id: String) -> IoK8sKubernetesPkgApiV1AwsElasticBlockStoreVolumeSource {
    self.volume_id = volume_id;
    self
  }

  pub fn volume_id(&self) -> &String {
    &self.volume_id
  }


}



