/* 
 * Kubernetes
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.7.12
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/// IoK8sKubernetesPkgApisExtensionsV1beta1HttpIngressPath : HTTPIngressPath associates a path regex with a backend. Incoming urls matching the path are forwarded to the backend.

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct IoK8sKubernetesPkgApisExtensionsV1beta1HttpIngressPath {
  /// Backend defines the referenced service endpoint to which the traffic will be forwarded to.
  #[serde(rename = "backend")]
  backend: ::models::IoK8sKubernetesPkgApisExtensionsV1beta1IngressBackend,
  /// Path is an extended POSIX regex as defined by IEEE Std 1003.1, (i.e this follows the egrep/unix syntax, not the perl syntax) matched against the path of an incoming request. Currently it can contain characters disallowed from the conventional \"path\" part of a URL as defined by RFC 3986. Paths must begin with a '/'. If unspecified, the path defaults to a catch all sending traffic to the backend.
  #[serde(rename = "path")]
  path: Option<String>
}

impl IoK8sKubernetesPkgApisExtensionsV1beta1HttpIngressPath {
  /// HTTPIngressPath associates a path regex with a backend. Incoming urls matching the path are forwarded to the backend.
  pub fn new(backend: ::models::IoK8sKubernetesPkgApisExtensionsV1beta1IngressBackend) -> IoK8sKubernetesPkgApisExtensionsV1beta1HttpIngressPath {
    IoK8sKubernetesPkgApisExtensionsV1beta1HttpIngressPath {
      backend: backend,
      path: None
    }
  }

  pub fn set_backend(&mut self, backend: ::models::IoK8sKubernetesPkgApisExtensionsV1beta1IngressBackend) {
    self.backend = backend;
  }

  pub fn with_backend(mut self, backend: ::models::IoK8sKubernetesPkgApisExtensionsV1beta1IngressBackend) -> IoK8sKubernetesPkgApisExtensionsV1beta1HttpIngressPath {
    self.backend = backend;
    self
  }

  pub fn backend(&self) -> &::models::IoK8sKubernetesPkgApisExtensionsV1beta1IngressBackend {
    &self.backend
  }


  pub fn set_path(&mut self, path: String) {
    self.path = Some(path);
  }

  pub fn with_path(mut self, path: String) -> IoK8sKubernetesPkgApisExtensionsV1beta1HttpIngressPath {
    self.path = Some(path);
    self
  }

  pub fn path(&self) -> Option<&String> {
    self.path.as_ref()
  }

  pub fn reset_path(&mut self) {
    self.path = None;
  }

}



