/* 
 * Kubernetes
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1.7.12
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/// IoK8sApimachineryPkgApisMetaV1LabelSelector : A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct IoK8sApimachineryPkgApisMetaV1LabelSelector {
  /// matchExpressions is a list of label selector requirements. The requirements are ANDed.
  #[serde(rename = "matchExpressions")]
  match_expressions: Option<Vec<::models::IoK8sApimachineryPkgApisMetaV1LabelSelectorRequirement>>,
  /// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.
  #[serde(rename = "matchLabels")]
  match_labels: Option<::std::collections::HashMap<String, String>>
}

impl IoK8sApimachineryPkgApisMetaV1LabelSelector {
  /// A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
  pub fn new() -> IoK8sApimachineryPkgApisMetaV1LabelSelector {
    IoK8sApimachineryPkgApisMetaV1LabelSelector {
      match_expressions: None,
      match_labels: None
    }
  }

  pub fn set_match_expressions(&mut self, match_expressions: Vec<::models::IoK8sApimachineryPkgApisMetaV1LabelSelectorRequirement>) {
    self.match_expressions = Some(match_expressions);
  }

  pub fn with_match_expressions(mut self, match_expressions: Vec<::models::IoK8sApimachineryPkgApisMetaV1LabelSelectorRequirement>) -> IoK8sApimachineryPkgApisMetaV1LabelSelector {
    self.match_expressions = Some(match_expressions);
    self
  }

  pub fn match_expressions(&self) -> Option<&Vec<::models::IoK8sApimachineryPkgApisMetaV1LabelSelectorRequirement>> {
    self.match_expressions.as_ref()
  }

  pub fn reset_match_expressions(&mut self) {
    self.match_expressions = None;
  }

  pub fn set_match_labels(&mut self, match_labels: ::std::collections::HashMap<String, String>) {
    self.match_labels = Some(match_labels);
  }

  pub fn with_match_labels(mut self, match_labels: ::std::collections::HashMap<String, String>) -> IoK8sApimachineryPkgApisMetaV1LabelSelector {
    self.match_labels = Some(match_labels);
    self
  }

  pub fn match_labels(&self) -> Option<&::std::collections::HashMap<String, String>> {
    self.match_labels.as_ref()
  }

  pub fn reset_match_labels(&mut self) {
    self.match_labels = None;
  }

}



